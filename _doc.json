[
  {
    "kind": "class",
    "name": "ObjectDisposedException",
    "location": {
      "filename": "file:///C:/repos/intv8/dispose/src/exceptions/object_disposed_exception.ts",
      "line": 29,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An exception raised when an attempt is made to access resources of a disposed object."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new {@link ObjectDisposedException} exception with the default message and no exception init properties."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/exceptions/object_disposed_exception.ts",
            "line": 33,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a new {@link ObjectDisposedException} exception with a message created from the provided {@link ObjectDisposedExceptionInit} properties."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "init",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/exceptions/object_disposed_exception.ts",
            "line": 36,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a new {@link ObjectDisposedException} exception with the provided message, optionally with additional {@link ObjectDisposedExceptionInit} properties."
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "init",
              "optional": true,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/exceptions/object_disposed_exception.ts",
            "line": 39,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "msgOrInit",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ]
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "identifier",
              "name": "maybeInit",
              "optional": true,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/exceptions/object_disposed_exception.ts",
            "line": 43,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The exception code for the {@link ObjectDisposedException} exception."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/exceptions/object_disposed_exception.ts",
            "line": 56,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "InvalidException",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "ObjectDisposedExceptionInit",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ObjectDisposedExceptionInit"
            }
          },
          "default": {
            "repr": "ObjectDisposedExceptionInit",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ObjectDisposedExceptionInit"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "T",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "T"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "ObjectDisposedExceptionInit",
    "location": {
      "filename": "file:///C:/repos/intv8/dispose/src/exceptions/object_disposed_exception.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "The exception init properties for the {@link ObjectDisposedException} exception."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "BaseExceptionInit",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "objectName",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          ],
          "typeName": "BaseExceptionInit"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "assertNotDisposed",
    "location": {
      "filename": "file:///C:/repos/intv8/dispose/src/assert_not_disposed.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Asserts that the specified object is not disposed, optionally with a specific `message`."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "disposable",
          "optional": false,
          "tsType": {
            "repr": "IDisposable",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IDisposable"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "message",
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": {
        "repr": "void",
        "kind": "keyword",
        "keyword": "void"
      },
      "hasBody": true,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "using",
    "location": {
      "filename": "file:///C:/repos/intv8/dispose/src/using.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Performs a `callback` function with the provided `disposable` disposing the `disposable` on completion, returning any exceptions that may have occured during disposal."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "disposable",
          "optional": false,
          "tsType": {
            "repr": "T",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "T"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "callback",
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "R",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "R"
                }
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "disposable",
                  "optional": false,
                  "tsType": {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          }
        }
      ],
      "returnType": {
        "repr": "R",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "R"
        }
      },
      "hasBody": true,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "IDisposable",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IDisposable"
            }
          }
        },
        {
          "name": "R"
        }
      ]
    }
  },
  {
    "kind": "function",
    "name": "usingAsync",
    "location": {
      "filename": "file:///C:/repos/intv8/dispose/src/using.ts",
      "line": 24,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Asynchronously performs a `callback` function with the provided `disposable` disposing the `disposable` on completion, returning any exceptions that may have occured during disposal."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "disposable",
          "optional": false,
          "tsType": {
            "repr": "T",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "T"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "callback",
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "Promise",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "R",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "R"
                      }
                    }
                  ],
                  "typeName": "Promise"
                }
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "disposable",
                  "optional": false,
                  "tsType": {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "R",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "R"
              }
            }
          ],
          "typeName": "Promise"
        }
      },
      "hasBody": true,
      "isAsync": true,
      "isGenerator": false,
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "IDisposable",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IDisposable"
            }
          }
        },
        {
          "name": "R"
        }
      ]
    }
  },
  {
    "kind": "function",
    "name": "dispose",
    "location": {
      "filename": "file:///C:/repos/intv8/dispose/src/dispose.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Disposes an array of {@link IDisposable} objects returning any exceptions that may have occrred during disposal."
    },
    "functionDef": {
      "params": [
        {
          "kind": "rest",
          "arg": {
            "kind": "identifier",
            "name": "disposables",
            "optional": false,
            "tsType": null
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "IDisposable",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "IDisposable"
              }
            }
          }
        }
      ],
      "returnType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "",
              "kind": "parenthesized",
              "parenthesized": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "Error",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Error"
                    }
                  },
                  {
                    "repr": "Exception",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Exception"
                    }
                  }
                ]
              }
            }
          },
          {
            "repr": "undefined",
            "kind": "keyword",
            "keyword": "undefined"
          }
        ]
      },
      "hasBody": true,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "AbstractDisposable",
    "location": {
      "filename": "file:///C:/repos/intv8/dispose/src/abstract_disposable.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An abstract class implementation of the {@link IDisposable} interface."
    },
    "classDef": {
      "isAbstract": true,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "Internal state for {@link isDisposed}."
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "stateOfIsDisposed",
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/abstract_disposable.ts",
            "line": 44,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Asserts that `disposable`, an {@link IDisposable} instance, has not been disposed, optionally with a specific `message`."
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "assertNotDisposed",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "disposable",
                "optional": false,
                "tsType": {
                  "repr": "IDisposable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "IDisposable"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "message",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/abstract_disposable.ts",
            "line": 14,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Whether the resource for this {@link AbstractDisposable} have been freed up."
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isDisposed",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/abstract_disposable.ts",
            "line": 22,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the string representation of this {@link AbstractDisposable}."
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/abstract_disposable.ts",
            "line": 27,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Initiates the process of freeing up unmanaged resources and finalizing this {@link AbstractDisposable}."
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "dispose",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/abstract_disposable.ts",
            "line": 33,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Asserts that this object has not been disposed, optionally with a specific `message`."
          },
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "assertNotDisposed",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "message",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/abstract_disposable.ts",
            "line": 47,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Free up resources."
          },
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onDispose",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/abstract_disposable.ts",
            "line": 52,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "IDisposable",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "IDisposable"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "DisposablePool",
    "location": {
      "filename": "file:///C:/repos/intv8/dispose/src/disposable_pool.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "A class for collecting independant {@link IDisposable} objects into a single {@link DisposablePool}."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Creates a new instance of {@link DisposablePool}, with the keyed collection of {@link IDisposable} objects, `disposables`, to pool together."
          },
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "disposables",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/disposable_pool.ts",
            "line": 16,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The pool of {@link IDisposable} objects."
          },
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              },
              {
                "repr": "undefined",
                "kind": "keyword",
                "keyword": "undefined"
              }
            ]
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_disposables",
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/disposable_pool.ts",
            "line": 64,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "The resources within the {@link DisposablePool}."
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resources",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/disposable_pool.ts",
            "line": 23,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "A convenience method to use the pool of {@link IDisposable} objects in a callback, disposing of the pool and this {@link DisposablePool} on completion."
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "use",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callback",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "disposables",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "self",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/disposable_pool.ts",
            "line": 28,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "A convenience method to use the pool of {@link IDisposable} objects in an aynchronous callback, disposing of the pool and this {@link DisposablePool} on completion."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "useAsync",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callback",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "Promise",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "void",
                            "kind": "keyword",
                            "keyword": "void"
                          }
                        ],
                        "typeName": "Promise"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "disposables",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "self",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "this",
                    "kind": "this",
                    "this": true
                  }
                ],
                "typeName": "Promise"
              }
            },
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/disposable_pool.ts",
            "line": 45,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Disposes the pool of {@link IDisposable} objectss, then disposes this {@link DisposablePool}."
          },
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onDispose",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/repos/intv8/dispose/src/disposable_pool.ts",
            "line": 67,
            "col": 2
          }
        }
      ],
      "extends": "AbstractDisposable",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [],
              "callSignatures": [],
              "indexSignatures": [
                {
                  "readonly": false,
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "key",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "tsType": {
                    "repr": "IDisposable",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "IDisposable"
                    }
                  }
                }
              ]
            }
          }
        }
      ],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "VERSION",
    "location": {
      "filename": "file:///C:/repos/intv8/dispose/src/version.ts",
      "line": 11,
      "col": 13
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "The current release version of the intv8 dispose package."
    },
    "variableDef": {
      "tsType": {
        "repr": "0.0.1",
        "kind": "literal",
        "literal": {
          "kind": "string",
          "string": "0.0.1"
        }
      },
      "kind": "const"
    }
  }
]
